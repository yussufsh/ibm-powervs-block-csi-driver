// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/device/device.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLinuxDevice is a mock of LinuxDevice interface.
type MockLinuxDevice struct {
	ctrl     *gomock.Controller
	recorder *MockLinuxDeviceMockRecorder
}

// MockLinuxDeviceMockRecorder is the mock recorder for MockLinuxDevice.
type MockLinuxDeviceMockRecorder struct {
	mock *MockLinuxDevice
}

// NewMockLinuxDevice creates a new mock instance.
func NewMockLinuxDevice(ctrl *gomock.Controller) *MockLinuxDevice {
	mock := &MockLinuxDevice{ctrl: ctrl}
	mock.recorder = &MockLinuxDeviceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinuxDevice) EXPECT() *MockLinuxDeviceMockRecorder {
	return m.recorder
}

// CreateDevice mocks base method.
func (m *MockLinuxDevice) CreateDevice() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDevice")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDevice indicates an expected call of CreateDevice.
func (mr *MockLinuxDeviceMockRecorder) CreateDevice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDevice", reflect.TypeOf((*MockLinuxDevice)(nil).CreateDevice))
}

// DeleteDevice mocks base method.
func (m *MockLinuxDevice) DeleteDevice() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDevice")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDevice indicates an expected call of DeleteDevice.
func (mr *MockLinuxDeviceMockRecorder) DeleteDevice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDevice", reflect.TypeOf((*MockLinuxDevice)(nil).DeleteDevice))
}

// GetDevice mocks base method.
func (m *MockLinuxDevice) GetDevice() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevice")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetDevice indicates an expected call of GetDevice.
func (mr *MockLinuxDeviceMockRecorder) GetDevice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevice", reflect.TypeOf((*MockLinuxDevice)(nil).GetDevice))
}

// GetMapper mocks base method.
func (m *MockLinuxDevice) GetMapper() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMapper")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMapper indicates an expected call of GetMapper.
func (mr *MockLinuxDeviceMockRecorder) GetMapper() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMapper", reflect.TypeOf((*MockLinuxDevice)(nil).GetMapper))
}
